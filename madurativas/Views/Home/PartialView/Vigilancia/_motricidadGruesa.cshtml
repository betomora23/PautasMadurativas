@using System.Collections
@using madurativas.db
@model Paciente

<div class="modal-content">
    @{
        var db = new madurativasEntities();        
        var motriG = db.hitos_motricidad_gruesa.OrderBy(s => s.motricidad_gruesa_id);
        var _Caledad = DateTime.Now.Subtract(Model.fechaNacimiento);
        var Valor = 0.0;
        decimal _edadAMostrar = 0;
        decimal _edad = 0;
        decimal _edadCorregida = 0;
        decimal _edadCorregidaAMostrar = 0;
        if (Model.EC_antesNacimiento != 0 && Model.EC_antesNacimiento != null)
        {
            Valor = Math.Round(((40 - (Int32)Model.EC_antesNacimiento) / 4.5 / 12), 2);
        }

        if (Model.EC_antesNacimiento <= 37 && Model.EC_antesNacimiento > 0 && _Caledad.Days < 730)
        {
            _edadAMostrar = Convert.ToDecimal((_Caledad.TotalDays / 365.25).ToString("F1"));
            _edad = Convert.ToDecimal((_Caledad.TotalDays / 365.25).ToString("F2"));
            _edadCorregida = Convert.ToDecimal((_edad - (decimal)Valor).ToString("F2"));
            _edadCorregidaAMostrar = Convert.ToDecimal((_edad - (decimal)Valor).ToString().Substring(0, ((_edad - (decimal)Valor).ToString()).Length - 1));
        }
        else
        {
            _edadAMostrar = Convert.ToDecimal((_Caledad.TotalDays / 365.25).ToString("F1"));
            _edad = Convert.ToDecimal((_Caledad.TotalDays / 365.25).ToString("F2"));
        }

        string Resultado(decimal min, decimal max)
        {
            if (_edadCorregida != 0 && _Caledad.Days < 730)
            {
                if (_edadCorregida <= min) { return "Aún no se debería presentar"; }
                return _edadCorregida >= max ? "Debería estar presente" : "Puede o no cumplir";
            }
            else
            {
                if (_edad <= min) { return "Aún no se debería presentar"; }
                return _edad >= max ? "Debería estar presente" : "Puede o no cumplir";
            }
        }

        string BackgroundColor(decimal min, decimal max)
        {
            if (_edadCorregida != 0 && _Caledad.Days < 730)
            {
                return (_edadCorregida <= min) ? "white" : _edadCorregida >= max ? "#ED2F39" : "#A9D08E";
            }
            else
            {
                return (_edad <= min) ? "white" : _edad >= max ? "#ED2F39" : "#A9D08E";
            }
        }

        string Color(decimal min, decimal max)
        {
            if (_edadCorregida != 0 && _Caledad.Days < 730)
            {
                return (_edadCorregida <= min) ? "Black" : _edadCorregida >= max ? "White" : "Black";
            }
            else
            {
                return (_edad <= min) ? "Black" : _edad >= max ? "White" : "Black";
            }
        }

        }
    <div class="modal-header" >
        @*<button type="button" class="close" data-dismiss="modal">&times;</button>*@
        <table class="col-md-12">
            <tr>
                <td class="col-md-6">
                    <h4 class="modal-title">Motricidad Gruesa</h4>
                    <p class="margen-parrafo"><strong>Paciente:</strong> @Model.FullName</p>
                    <p class="margen-parrafo"><strong>Edad Cronologica:</strong> @_edadAMostrar años.</p>
                    @if (_edadCorregida != 0 && _Caledad.Days < 730)
                    {<p class="margen-parrafo"><strong>Edad Corregida:</strong> @_edadCorregidaAMostrar años.</p>}
                </td>
                <td class="col-md-6">
                    <h5 style="color: white; float: right; width: 100%; text-align: right;">
                        <strong><button style="color:white; margin-right: 5%;" type="button" class="close" data-dismiss="modal">&times;</button> No es una prueba diagnóstica&nbsp;&nbsp;</strong>
                    </h5>
                </td>
            </tr>
        </table>
    </div>

    <div class="modal-body" id="bodyMotricidadGruesa">
        <table class="table table-condensed">
            <thead>
                <tr>
                    <th>Motricidad Gruesa</th>
                    <th>Min*</th>
                    <th>Max**</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in motriG)
                {
                    <tr>
                        <td>@item.descripcion</td>
                        <td>@item.min</td>
                        <td>@item.max</td>
                        <td style="background:@BackgroundColor(@item.min, @item.max); color:@Color(@item.min, @item.max);">@Resultado(item.min, item.max)</td>
                    </tr>
                }
            </tbody>
        </table>
        <hr />
        <p> *Mínimo: IC 95 inferior para el Percentilo 25 o 50 publicado</p>
        <p>**Máximo: IC 95 superior para el Percentilo 90 publicado</p>
    </div>

    @*<div class="modal-footer">
        <div class="form-group">
            <div class="col-md-12">
                <button id="btnPersonalSocial" type="submit" class="col-md-2 cancelButton" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>*@
</div>
